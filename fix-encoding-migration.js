// ===============================
//  Script de migration pour corriger l'encodage UTF-8
//  √Ä ex√©cuter une seule fois : node fix-encoding-migration.js
// ===============================

require('dotenv').config();
const mongoose = require('mongoose');
const Image = require('./models/Image');

// Fonction pour corriger l'encodage UTF-8
const fixUTF8Encoding = (str) => {
    try {
        if (str.includes('√É') || str.includes('√Ç') || str.includes('√É¬®') || str.includes('√É¬©') || str.includes('√É ')) {
            const buffer = Buffer.from(str, 'latin1');
            return buffer.toString('utf8');
        }
        return str;
    } catch (error) {
        console.warn(`Impossible de corriger l'encodage pour: ${str}`, error);
        return str;
    }
};

async function fixEncodingInDatabase() {
    try {
        // Connexion √† MongoDB
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ Connect√© √† MongoDB');

        // R√©cup√©rer toutes les images avec des probl√®mes d'encodage
        const images = await Image.find({
            originalFilename: { 
                $regex: /√É|√Ç|√É¬®|√É¬©|√É / 
            }
        });

        console.log(`üîç Trouv√© ${images.length} images avec des probl√®mes d'encodage`);

        let correctedCount = 0;
        
        for (const image of images) {
            const originalName = image.originalFilename;
            const correctedName = fixUTF8Encoding(originalName);
            
            if (originalName !== correctedName) {
                console.log(`üîß Correction: "${originalName}" ‚Üí "${correctedName}"`);
                
                // Mettre √† jour en base
                await Image.findByIdAndUpdate(image._id, {
                    originalFilename: correctedName
                });
                
                correctedCount++;
            }
        }

        console.log(`‚úÖ Migration termin√©e: ${correctedCount} noms de fichiers corrig√©s`);
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la migration:', error);
    } finally {
        await mongoose.disconnect();
        console.log('üîå D√©connect√© de MongoDB');
    }
}

// Ex√©cuter la migration
if (require.main === module) {
    fixEncodingInDatabase();
}

module.exports = { fixUTF8Encoding };