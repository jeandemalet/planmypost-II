#!/usr/bin/env node

/**
 * Script pour copier nlp.min.js depuis node_modules vers public/lib
 * Utile pour maintenir la coh√©rence lors des mises √† jour
 */

const fs = require('fs');
const path = require('path');

const sourceFile = path.join(__dirname, '..', 'node_modules', '@nlpjs', 'nlp', 'dist', 'nlp.min.js');
const fallbackSource = path.join(__dirname, '..', 'node_modules', '@nlpjs', 'nlp', 'src', 'index.js');
const targetFile = path.join(__dirname, '..', 'public', 'lib', 'nlp.min.js');

console.log('üîç Recherche du fichier NLP.js...');

// V√©rifier si le fichier de destination existe d√©j√†
if (fs.existsSync(targetFile)) {
    console.log('‚úÖ Le fichier nlp.min.js existe d√©j√† dans public/lib/');
    console.log('   Si vous voulez le remplacer, supprimez-le d\'abord.');
    process.exit(0);
}

// Essayer de copier depuis dist/
if (fs.existsSync(sourceFile)) {
    console.log('üìÅ Fichier trouv√© dans node_modules/@nlpjs/nlp/dist/');
    fs.copyFileSync(sourceFile, targetFile);
    console.log('‚úÖ Fichier copi√© avec succ√®s vers public/lib/nlp.min.js');
} else {
    console.log('‚ö†Ô∏è  Fichier dist non trouv√©, cette version de @nlpjs/nlp n\'a pas de build minifi√©');
    console.log('   Le fichier nlp.min.js actuel dans public/lib/ sera conserv√©');
    
    if (fs.existsSync(fallbackSource)) {
        console.log('‚ÑπÔ∏è  Fichier source disponible:', fallbackSource);
        console.log('   Vous pouvez utiliser un bundler pour cr√©er une version minifi√©e si n√©cessaire');
    }
}

console.log('üéâ Configuration termin√©e !');