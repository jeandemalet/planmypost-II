#!/usr/bin/env python3
"""
Script principal pour g√©n√©rer automatiquement le th√©saurus de hashtags
en combinant les donn√©es de Predis.ai et HIERTAGS.
"""

import os
import sys
import subprocess
import json
from pathlib import Path

def install_requirements():
    """Installe les d√©pendances n√©cessaires."""
    required_packages = ['requests', 'beautifulsoup4', 'pandas']
    
    for package in required_packages:
        try:
            __import__(package.replace('-', '_'))
        except ImportError:
            print(f"Installation de {package}...")
            subprocess.check_call([sys.executable, '-m', 'pip', 'install', package])

def check_hiertags_file():
    """V√©rifie si le fichier HIERTAGS est pr√©sent."""
    hiertags_file = "flickr_tag_co-occurrence_network.tsv"
    if not os.path.exists(hiertags_file):
        print(f"""
‚ùå ATTENTION: Le fichier '{hiertags_file}' n'est pas trouv√©.

Pour t√©l√©charger les donn√©es HIERTAGS :
1. Allez sur : https://www.ims.uni-stuttgart.de/en/research/resources/corpora/HierTags/
2. T√©l√©chargez le fichier 'flickr_tag_co-occurrence_network.tsv'
3. Placez-le dans le dossier racine du projet

Le script continuera sans les donn√©es s√©mantiques HIERTAGS.
        """)
        return False
    return True

def main():
    print("üöÄ G√©n√©ration automatique du th√©saurus de hashtags")
    print("=" * 50)
    
    # Installer les d√©pendances
    print("1. V√©rification des d√©pendances...")
    install_requirements()
    
    # V√©rifier le fichier HIERTAGS
    print("2. V√©rification du fichier HIERTAGS...")
    has_hiertags = check_hiertags_file()
    
    # √âtape 1: Scraping Predis.ai
    print("3. Scraping des donn√©es Predis.ai...")
    try:
        from scrape_predis_ai_complet import scrape_predis_ai_complet
        scrape_predis_ai_complet()
    except Exception as e:
        print(f"‚ùå Erreur lors du scraping : {e}")
        return
    
    # √âtape 2: Traitement HIERTAGS (si disponible)
    if has_hiertags:
        print("4. Traitement des donn√©es HIERTAGS...")
        try:
            from process_hiertags_complet import process_hiertags_complet
            process_hiertags_complet()
        except Exception as e:
            print(f"‚ùå Erreur lors du traitement HIERTAGS : {e}")
            # Cr√©er un fichier vide pour que la fusion fonctionne
            with open("hiertags_relations_raw.json", 'w') as f:
                json.dump({}, f)
    else:
        print("4. Cr√©ation d'un fichier HIERTAGS vide...")
        with open("hiertags_relations_raw.json", 'w') as f:
            json.dump({}, f)
    
    # √âtape 3: Fusion et g√©n√©ration finale
    print("5. G√©n√©ration du th√©saurus final...")
    try:
        from generer_thesaurus_final import generer_thesaurus_final
        generer_thesaurus_final()
        
        # Copier le fichier vers le dossier public/lib
        if os.path.exists("hashtag-thesaurus.json"):
            os.makedirs("public/lib", exist_ok=True)
            import shutil
            shutil.copy("hashtag-thesaurus.json", "public/lib/hashtag-thesaurus.json")
            print("üìÅ Fichier copi√© vers public/lib/hashtag-thesaurus.json")
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la g√©n√©ration finale : {e}")
        return
    
    print("\nüéâ G√©n√©ration termin√©e avec succ√®s !")
    print("Le fichier hashtag-thesaurus.json est pr√™t √† √™tre utilis√© dans votre application.")

if __name__ == "__main__":
    main()