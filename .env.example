# ===============================
# Configuration de Base
# ===============================
# URI de la base de données MongoDB
MONGODB_URI=mongodb://localhost:27017/publication_organizer_db

# Port sur lequel le serveur écoute
PORT=3000

# Environnement (development, production, test)
NODE_ENV=development

# ===============================
# Authentification Google
# ===============================
# ID client Google OAuth 2.0
# Obtenez-le depuis Google Cloud Console
GOOGLE_CLIENT_ID=your_google_client_id_here.apps.googleusercontent.com

# ===============================
# Sécurité - CHANGEZ CES VALEURS
# ===============================
# Secret JWT - DOIT être changé en production (min 32 caractères)
# Générez avec: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=CHANGE_THIS_IN_PRODUCTION_MIN_32_CHARACTERS

# Secret de session - DOIT être changé en production (min 32 caractères)
SESSION_SECRET=CHANGE_THIS_IN_PRODUCTION_MIN_32_CHARACTERS

# ===============================
# Configuration des Performances
# ===============================
# Taille maximale des fichiers en MB
MAX_FILE_SIZE=50

# Configuration du rate limiting
# Fenêtre de temps en minutes
RATE_LIMIT_WINDOW=15
# Nombre maximum de requêtes par fenêtre
RATE_LIMIT_MAX=500

# Niveau de log (error, warn, info, debug)
LOG_LEVEL=info

# ===============================
# Configuration Optionnelle
# ===============================
# Configuration SMTP pour les emails (optionnel)
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your_email@example.com
# SMTP_PASS=your_email_password

# Configuration Redis pour le cache (optionnel)
# REDIS_URL=redis://localhost:6379

# Configuration SSL pour la production (optionnel)
# SSL_KEY_PATH=/path/to/ssl/private.key
# SSL_CERT_PATH=/path/to/ssl/certificate.crt

# ===============================
# Instructions de Sécurité
# ===============================
# 1. Changez TOUS les secrets avant le déploiement
# 2. Utilisez des secrets forts (longueur minimale 32 caractères)
# 3. Ne commitez JAMAIS ce fichier avec de vraies valeurs
# 4. Utilisez un gestionnaire de secrets en production
# 5. Activez HTTPS en production
# 6. Configurez les CORS appropriément pour votre domaine

# ===============================
# Exemples de Génération de Secrets
# ===============================
# Node.js: require('crypto').randomBytes(32).toString('hex')
# OpenSSL: openssl rand -hex 32
# Python: import secrets; secrets.token_hex(32)